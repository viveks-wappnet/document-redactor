"""check_current_state

Revision ID: 8286448b7730
Revises: 64f65bd75a9c
Create Date: 2025-07-21 13:07:47.821078

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8286448b7730'
down_revision: Union[str, Sequence[str], None] = '64f65bd75a9c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('uploads')
    op.drop_index(op.f('ix_redacted_pages_id'), table_name='redacted_pages')
    op.drop_index(op.f('ix_redacted_pages_page_id'), table_name='redacted_pages')
    op.drop_table('redacted_pages')
    op.drop_index(op.f('ix_pages_id'), table_name='pages')
    op.drop_index(op.f('ix_pages_upload_id'), table_name='pages')
    op.drop_table('pages')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pages',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('pages_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('upload_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('page_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('img_bytes', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['upload_id'], ['uploads.id'], name='pages_upload_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='pages_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_pages_upload_id'), 'pages', ['upload_id'], unique=False)
    op.create_index(op.f('ix_pages_id'), 'pages', ['id'], unique=False)
    op.create_table('redacted_pages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('page_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('redacted_bytes', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['page_id'], ['pages.id'], name=op.f('redacted_pages_page_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('redacted_pages_pkey'))
    )
    op.create_index(op.f('ix_redacted_pages_page_id'), 'redacted_pages', ['page_id'], unique=False)
    op.create_index(op.f('ix_redacted_pages_id'), 'redacted_pages', ['id'], unique=False)
    op.create_table('uploads',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('filename', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('uploaded_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('PENDING', 'PROCESSING', 'DONE', 'FAILED', name='upload_status'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('uploads_pkey'))
    )
    # ### end Alembic commands ###
